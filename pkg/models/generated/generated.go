// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.
//go:build !goverter

package generated

import (
	sqlc "github.com/emp1re/students/pkg/db/sqlc"
	models "github.com/emp1re/students/pkg/models"
)

type ConverterImpl struct{}

func (c *ConverterImpl) Convert(source sqlc.Student) models.OutStudent {
	var modelsOutStudent models.OutStudent
	modelsOutStudent.ID = source.ID
	modelsOutStudent.StudentID = source.StudentID
	modelsOutStudent.FirstName = source.FirstName
	modelsOutStudent.LastName = source.LastName
	modelsOutStudent.Age = models.PgTypeToInt8(source.Age)
	modelsOutStudent.Email = source.Email
	modelsOutStudent.Gender = models.PgTypeToText(source.Gender)
	modelsOutStudent.FavouriteColor = models.PgTypeToText(source.FavouriteColor)
	modelsOutStudent.StudentAddress = source.StudentAddress
	modelsOutStudent.CreatedAt = models.PgTypeTimestamptz(source.CreatedAt)
	modelsOutStudent.UpdatedAt = models.PgTypeTimestamptz(source.UpdatedAt)
	modelsOutStudent.Deleted = models.PgTypeToBool(source.Deleted)
	return modelsOutStudent
}
func (c *ConverterImpl) ConvertItems(source []sqlc.Student) []models.OutStudent {
	var modelsOutStudentList []models.OutStudent
	if source != nil {
		modelsOutStudentList = make([]models.OutStudent, len(source))
		for i := 0; i < len(source); i++ {
			modelsOutStudentList[i] = c.Convert(source[i])
		}
	}
	return modelsOutStudentList
}
